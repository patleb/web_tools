makefile:
  libs: <%= `gdal-config --libs` %>
  cflags: <%= `gdal-config --cflags` %>

after_include: >
  using namespace GDAL;

before_initialize: >
  GDALAllRegister();

module PROJ:
  def:
    self.version:

module GDAL:
  def:
    self.version:

  class Base | GDAL::Base:
    def:
      self.directions: [proj = (string)"4326"]

      srid:
      wkt:
      proj4:
      directions | orientation:

  class Vector < GDAL::Base:
    attr_reader: [size]

    def:
      initialize | GDAL::Vector.COPY:
        - [vector< double >, x]
        - [vector< double >, y]
        - [string, proj = (string)"4326"]
      x:
      y:
      points:
      reproject:

  class Raster < GDAL::Base:
    class Transform | GDAL::Raster::Transform:
      attr_reader: [mesh, width, height, x0, y0, dx, dy, rx, ry]

      def:
        shape:
        cache_key:

    attr_reader: [nodata, width, height, x0, y0, dx, dy]

    def:
      initialize | GDAL::Raster.COPY:
        - [Numo::NArray, z]
        - [Numo::Type, type_id]
        - [vector< double >, x01_y01]
        - [string, proj = (string)"4326"]
        - [double, nodata = C::Nil]
      shape:
      type:
      x:
      y:
      z:
      reproject: [proj, nodata = C::Nil, compact = false, memoize = false]
      transform_for:
